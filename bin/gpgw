#!/usr/bin/env bash

set -e

die() {
	echo "$@" 1>&2
	exit 1
}

default_key=contact@stephanedewit.be

encrypt=0
decrypt=0
sign=-1
verify=0

recipient=$default_key
sign_key=$default_key
keep=1

while getopts ":edsSvr:u:kK" opt; do
	case $opt in
		e ) encrypt=1;;
		d ) decrypt=1;;
		s ) sign=1;;
		S ) sign=0;;
		v ) verify=1;;
		r ) recipient=$OPTARG;;
		u ) sign_key=$OPTARG;;
		k ) keep=1;;
		K ) keep=0;;
		: ) die "-$OPTARG requires an argument";;
		\?) die "Invalid option: -$OPTARG";;
	esac
done

shift $((OPTIND - 1))

[ $encrypt -ne 1 ] && \
[ $decrypt -ne 1 ] && \
[ $sign -ne 1 ] && \
[ $verify -ne 1 ] && \
	die "Missing -e, -d, -s or -v"

[ $encrypt -eq 1 ] && [ $decrypt -eq 1 ] && die "-e and -d are both set"
[ $decrypt -eq 1 ] && [ $sign -eq 1 ] && die "-d and -s are both set"

[ $verify -eq 1 ] && { \
	[ $encrypt -eq 1 ] || \
	[ $decrypt -eq 1 ] || \
	[ $sign -eq 1 ]; \
} && \
	die "-v and another action are both set"

for file in "$@"; do
	[ -e "$file" ] || die "$file missing"

	if [ $encrypt -eq 1 ]; then
		[ "${file: -4}" == ".gpg" ] && die "$file is already encrypted"

		out=${file}.gpg

		parameters=(--encrypt --recipient "$recipient")

		if [ $sign -ne 0 ]; then
			parameters=("${parameters[@]}" --sign --local-user "$sign_key")
		fi
	elif [ $decrypt -eq 1 ]; then
		[ "${file: -4}" == ".gpg" ] || die "$file is not encrypted"

		out=${file%.*}

		parameters=(--decrypt)
	elif [ $sign -eq 1 ]; then
		out=${file}.asc

		parameters=(--detach-sig --armor --local-user "$sign_key")
	elif [ $verify -eq 1 ]; then
		if [ "${file: -4}" == ".asc" ]; then
			sig=${file}
			file=${file%.*}

			computed_path=$file
		else
			sig=${file}.asc

			computed_path=$sig
		fi

		[ -e "$computed_path" ] || die "$computed_path missing"

		parameters=(--verify "$sig")
	else
		die "Unknown operation"
	fi

	if [ "$out" != "" ]; then
		[ -e "$out" ] && die "$out already exists"
		parameters=("${parameters[@]}" --output "$out")
	fi

	gpg "${parameters[@]}" "$file"

	if [ $encrypt -ne 1 ] && [ $decrypt -ne 1 ]; then
		continue
	fi

	chown --reference "$file" "$out"
	chmod --reference "$file" "$out"
	touch -r "$file" "$out"

	if [ $keep -eq 0 ]; then
		rm "$file"
	fi
done
